name: Build and create release PR

on:
  push:
    branches:
      - create/release

jobs:
  build_package:
    name: Build package and update version
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        
      - name: Get version from package.json
        id: get-version
        run: echo "PACKAGE_VERSION=$(jq -r '.version' package.json)" >> $GITHUB_ENV
        
      - name: Get current version from main branch
        id: get-current-version
        run: echo "CURRENT_VERSION=$(curl -s https://raw.githubusercontent.com/ONSdigital/design-system-react/main/package.json | jq -r '.version')" >> $GITHUB_ENV
        
      - name: Compare versions
        if: env.PACKAGE_VERSION == env.CURRENT_VERSION
        run: exit 1
        env:
          ERROR_MESSAGE: "Package version is the same as HEAD."
        
      - name: Replace version in readme.md
        run: sed -i "s/\(https:\/\/github.com\/ONSdigital\/design-system-react#\)v[0-9]\.[0-9]\.[0-9]/\1v${{ env.PACKAGE_VERSION }}/g" README.md
      
      - uses: actions/setup-node@v3
        with:
          node-version: '14'
      - name: Install dependencies
        run: yarn install
      - name: Run yarn build-package
        run: yarn build-package

  create_release_pr:
    name: Create release PR
    runs-on: ubuntu-latest
    needs: build_package
    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Create Pull Request
      uses: peter-evans/create-pull-request@v4
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        commit-message: "Create release PR"
        branch: create/release
        base: main
        title: "Build release - v${{ env.PACKAGE_VERSION }}"
        labels: "release"
  
  update_package_version:
    name: Update package version
    runs-on: ubuntu-latest
    needs: create_release_pr
    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Update package.json
      run: |
        echo "Updating package.json to version $PACKAGE_VERSION"
        jq ".version = \"$PACKAGE_VERSION\"" package.json > temp.json && mv temp.json package.json

    - name: Commit changes
      run: |
        git config --global user.email "github-actions[bot]@users.noreply.github.com"
        git config --global user.name "GitHub Actions"
        git checkout create/release
        git config pull.ff only  
        git pull origin create/release
        git add package.json
        git commit -m "Update package.json to version $PACKAGE_VERSION"

    - name: Push changes
      uses: ad-m/github-push-action@master
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        branch: create/release
